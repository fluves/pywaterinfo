[
    {
        "Title": "KISTERS QueryServices - Request Information",
        "Version": "1.10.7",
        "Datasource Type": "WDP Datasource",
        "Text": "All commands are available as HTTP GET and POST (add ?kvp=true to URL!) with key-value-pair encoding.",
        "LogoPath": "http://vp-tsmcalc01:8080/KiWIS/images/kisters.gif",
        "Labels": {
            "CSL": "Comma separated list",
            "Wildcard": "* as wildcard"
        },
        "Requests": {
            "getGroupList": {
                "Request": "getGroupList",
                "Description": "Retrieves a list of object groups.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "group_name": {
                            "Name": "group_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "group_type": {
                            "Name": "group_type",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "valid values are 'station', 'parameter', 'timeseries' and 'timeseries_dynamic'"
                        },
                        "group_purpose": {
                            "Name": "group_purpose",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "group_name": {
                            "Name": "group_name",
                            "Description": ""
                        },
                        "group_id": {
                            "Name": "group_id",
                            "Description": ""
                        },
                        "group_type": {
                            "Name": "group_type",
                            "Description": ""
                        },
                        "group_remark": {
                            "Name": "group_remark",
                            "Description": ""
                        },
                        "group_purpose": {
                            "Name": "group_purpose",
                            "Description": ""
                        },
                        "group_private": {
                            "Name": "group_private",
                            "Description": ""
                        },
                        "ca_group": {
                            "Name": "ca_group",
                            "Description": "returns custom group attributes, optionally use parameter ca_group_returnfields to select specific fields"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "ca_group_returnfields": {
                            "Name": "ca_group_returnfields",
                            "Description": "selects a set of custom defined group attributes (md_returnfield 'ca_group' must be active, allows comma separated list)"
                        },
                        "addlinks": {
                            "Name": "addlinks",
                            "Description": "adds links for easier data discovery to the response"
                        },
                        "includeprivate": {
                            "Name": "includeprivate",
                            "Description": "set to false to ignore private groups; default is true"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getSiteList": {
                "Request": "getSiteList",
                "Description": "Retrieves a list of sites with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "site_no": {
                            "Name": "site_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_uuid": {
                            "Name": "site_uuid",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_name": {
                            "Name": "site_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "bbox": {
                            "Name": "bbox",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "comma separated list with four values in order min_x, min_y, max_x, max_y; use 'crs' parameter to choose between local and global coordinates"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "geojson": {
                            "Name": "geojson",
                            "Description": "official GEOJSON format"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "site_no": {
                            "Name": "site_no",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "Description": ""
                        },
                        "site_uuid": {
                            "Name": "site_uuid",
                            "Description": "Unique database independent ID"
                        },
                        "site_name": {
                            "Name": "site_name",
                            "Description": ""
                        },
                        "site_longname": {
                            "Name": "site_longname",
                            "Description": ""
                        },
                        "site_latitude": {
                            "Name": "site_latitude",
                            "Description": ""
                        },
                        "site_longitude": {
                            "Name": "site_longitude",
                            "Description": ""
                        },
                        "site_carteasting": {
                            "Name": "site_carteasting",
                            "Description": ""
                        },
                        "site_cartnorthing": {
                            "Name": "site_cartnorthing",
                            "Description": ""
                        },
                        "site_type_name": {
                            "Name": "site_type_name",
                            "Description": "Site type, e.g. 'Surface Water'; Multiple values are concatenated with ; as separator"
                        },
                        "site_type_shortname": {
                            "Name": "site_type_shortname",
                            "Description": "Site type shortname; Multiple values are concatenated with ; as separator"
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "Description": ""
                        },
                        "site_georefsystem": {
                            "Name": "site_georefsystem",
                            "Description": ""
                        },
                        "site_area_wkt": {
                            "Name": "site_area_wkt",
                            "Description": "the WKT string of the site extent if set"
                        },
                        "site_area_wkt_org": {
                            "Name": "site_area_wkt_org",
                            "Description": "the original WKT string of the site extent if set"
                        },
                        "ca_site": {
                            "Name": "ca_site",
                            "Description": "returns custom site attributes, optionally use parameter ca_site_returnfields to select specific fields"
                        },
                        "custom_attributes": {
                            "Name": "custom_attributes",
                            "Description": "DEPRECATED - use ca_site instead"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "crs": {
                            "Name": "crs",
                            "Description": "select which coordinates should be used for bbox filtering, possible values are 'local' and 'global'; default is global"
                        },
                        "ca_site_returnfields": {
                            "Name": "ca_site_returnfields",
                            "Description": "selects a set of custom defined site attributes (returnfield 'ca_site' must be active, allows comma separated list)"
                        },
                        "custattr_returnfields": {
                            "Name": "custattr_returnfields",
                            "Description": "DEPRECATED - use ca_site_returnfields instead"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "addlinks": {
                            "Name": "addlinks",
                            "Description": "adds links for easier data discovery to the response"
                        },
                        "orderby": {
                            "Name": "orderby",
                            "Description": "Sort the response by one of the following fields: site_name, site_longname, site_no, site_id"
                        }
                    }
                }
            },
            "getStationList": {
                "Request": "getStationList",
                "Description": "Retrieves a list of stations with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_uuid": {
                            "Name": "station_uuid",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "catchment_no": {
                            "Name": "catchment_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_no": {
                            "Name": "site_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_uuid": {
                            "Name": "site_uuid",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_name": {
                            "Name": "site_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationgroup_id": {
                            "Name": "stationgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_shortname": {
                            "Name": "parametertype_shortname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "object_type": {
                            "Name": "object_type",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "object_type_shortname": {
                            "Name": "object_type_shortname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "bbox": {
                            "Name": "bbox",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "comma separated list with four values in order min_x, min_y, max_x, max_y; use 'crs' parameter to choose between local and global coordinates"
                        },
                        "fulltext": {
                            "Name": "fulltext",
                            "* as wildcard": "yes",
                            "Comma separated list": "no",
                            "Description": "fulltext filter for all station metadata fields"
                        },
                        "custattrfilter": {
                            "Name": "custattrfilter",
                            "* as wildcard": "yes",
                            "Comma separated list": "no",
                            "Description": "filter for one ore more custom station attributes in the form 'key1:value1;key2:value2;...'"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "geojson": {
                            "Name": "geojson",
                            "Description": "official GEOJSON format"
                        },
                        "kml": {
                            "Name": "kml",
                            "Description": "Keyhole Markup Language by Google and OGC"
                        },
                        "lpk": {
                            "Name": "lpk",
                            "Description": "ESRI Layer Package format"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "Description": ""
                        },
                        "station_uuid": {
                            "Name": "station_uuid",
                            "Description": "Unique database independent ID"
                        },
                        "station_name": {
                            "Name": "station_name",
                            "Description": ""
                        },
                        "catchment_no": {
                            "Name": "catchment_no",
                            "Description": ""
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "Description": ""
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "Description": ""
                        },
                        "station_latitude": {
                            "Name": "station_latitude",
                            "Description": ""
                        },
                        "station_longitude": {
                            "Name": "station_longitude",
                            "Description": ""
                        },
                        "station_carteasting": {
                            "Name": "station_carteasting",
                            "Description": ""
                        },
                        "station_cartnorthing": {
                            "Name": "station_cartnorthing",
                            "Description": ""
                        },
                        "station_local_x": {
                            "Name": "station_local_x",
                            "Description": ""
                        },
                        "station_local_y": {
                            "Name": "station_local_y",
                            "Description": ""
                        },
                        "station_timezone": {
                            "Name": "station_timezone",
                            "Description": ""
                        },
                        "station_utcoffset": {
                            "Name": "station_utcoffset",
                            "Description": ""
                        },
                        "station_posmethod": {
                            "Name": "station_posmethod",
                            "Description": ""
                        },
                        "site_no": {
                            "Name": "site_no",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "Description": ""
                        },
                        "site_uuid": {
                            "Name": "site_uuid",
                            "Description": "Unique database independent ID"
                        },
                        "site_name": {
                            "Name": "site_name",
                            "Description": ""
                        },
                        "site_longname": {
                            "Name": "site_longname",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "Description": ""
                        },
                        "parametertype_shortname": {
                            "Name": "parametertype_shortname",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "Description": ""
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "Description": ""
                        },
                        "stationparameter_id": {
                            "Name": "stationparameter_id",
                            "Description": ""
                        },
                        "parametertype_longname": {
                            "Name": "parametertype_longname",
                            "Description": ""
                        },
                        "object_type": {
                            "Name": "object_type",
                            "Description": "Station type, e.g. 'Surface Water'; Multiple values are concatenated with ; as separator"
                        },
                        "object_type_shortname": {
                            "Name": "object_type_shortname",
                            "Description": "Station type shortname; Multiple values are concatenated with ; as separator"
                        },
                        "station_georefsystem": {
                            "Name": "station_georefsystem",
                            "Description": ""
                        },
                        "station_longname": {
                            "Name": "station_longname",
                            "Description": ""
                        },
                        "station_area_wkt": {
                            "Name": "station_area_wkt",
                            "Description": "the WKT string of the station extent if set"
                        },
                        "station_area_wkt_org": {
                            "Name": "station_area_wkt_org",
                            "Description": "the original WKT string of the station extent if set"
                        },
                        "river_id": {
                            "Name": "river_id",
                            "Description": ""
                        },
                        "river_name": {
                            "Name": "river_name",
                            "Description": ""
                        },
                        "area_id": {
                            "Name": "area_id",
                            "Description": ""
                        },
                        "area_name": {
                            "Name": "area_name",
                            "Description": ""
                        },
                        "ca_site": {
                            "Name": "ca_site",
                            "Description": "returns custom site attributes, optionally use parameter ca_site_returnfields to select specific fields"
                        },
                        "ca_sta": {
                            "Name": "ca_sta",
                            "Description": "returns custom station attributes, optionally use parameter ca_sta_returnfields to select specific fields"
                        },
                        "custom_attributes": {
                            "Name": "custom_attributes",
                            "Description": "DEPRECATED - use ca_sta instead"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "crs": {
                            "Name": "crs",
                            "Description": "select which coordinates should be used for bbox filtering, possible values are 'localxy', 'regional' and 'global'; default is global; KML and LPK format will need global coordinates"
                        },
                        "ca_site_returnfields": {
                            "Name": "ca_site_returnfields",
                            "Description": "selects a set of custom defined site attributes (returnfield 'ca_site' must be active, allows comma separated list)"
                        },
                        "ca_sta_returnfields": {
                            "Name": "ca_sta_returnfields",
                            "Description": "selects a set of custom defined station attributes (returnfield 'ca_sta' must be active, allows comma separated list)"
                        },
                        "custattr_returnfields": {
                            "Name": "custattr_returnfields",
                            "Description": "DEPRECATED - use ca_sta_returnfields instead"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "flatten": {
                            "Name": "flatten",
                            "Description": "if true, the list will be flattened to contain one station per station_id, all parameter and the object_type fields will be concatenated per entry; default is false"
                        },
                        "addlinks": {
                            "Name": "addlinks",
                            "Description": "adds links for easier data discovery to the response"
                        },
                        "orderby": {
                            "Name": "orderby",
                            "Description": "Sort the response by one of the following fields: station_name, site_name, object_type_shortname, site_no, object_type, station_id, site_id, station_longname, catchment_id, catchment_name, station_no, catchment_no"
                        }
                    }
                }
            },
            "getParameterList": {
                "Request": "getParameterList",
                "Description": "Retrieves a list of parameters available at sites and/or stations.",
                "Subdescription": "The list will be distinct on all requested fields combined, unless custom attributes are requested",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_no": {
                            "Name": "site_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "site_name": {
                            "Name": "site_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_id": {
                            "Name": "stationparameter_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_longname": {
                            "Name": "stationparameter_longname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_longname": {
                            "Name": "parametertype_longname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametergroup_id": {
                            "Name": "parametergroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "Description": ""
                        },
                        "site_no": {
                            "Name": "site_no",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "Description": ""
                        },
                        "site_name": {
                            "Name": "site_name",
                            "Description": ""
                        },
                        "stationparameter_id": {
                            "Name": "stationparameter_id",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "Description": ""
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "Description": ""
                        },
                        "stationparameter_longname": {
                            "Name": "stationparameter_longname",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "Description": ""
                        },
                        "parametertype_longname": {
                            "Name": "parametertype_longname",
                            "Description": ""
                        },
                        "parametertype_shortunitname": {
                            "Name": "parametertype_shortunitname",
                            "Description": ""
                        },
                        "parametertype_unitname": {
                            "Name": "parametertype_unitname",
                            "Description": ""
                        },
                        "ca_par": {
                            "Name": "ca_par",
                            "Description": "returns custom parameter attributes, optionally use parameter ca_par_returnfields to select specific fields"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "ca_par_returnfields": {
                            "Name": "ca_par_returnfields",
                            "Description": "selects a set of custom defined parameter attributes (returnfield 'ca_par' must be active, allows comma separated list)"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "orderby": {
                            "Name": "orderby",
                            "Description": "Sort the response by one of the following fields: site_name, station_name, site_no, parametertype_longname, stationparameter_no, station_id, stationparameter_name, site_id, stationparameter_longname, station_no, parametertype_name"
                        }
                    }
                }
            },
            "getParameterTypeList": {
                "Request": "getParameterTypeList",
                "Description": "Retrieves the system defined parameter type list.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getCatchmentList": {
                "Request": "getCatchmentList",
                "Description": "Retrieves a list of catchments with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "catchment_no": {
                            "Name": "catchment_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "catchment_parent_id": {
                            "Name": "catchment_parent_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "catchment_no": {
                            "Name": "catchment_no",
                            "Description": ""
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "Description": ""
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "Description": ""
                        },
                        "catchment_parent_id": {
                            "Name": "catchment_parent_id",
                            "Description": ""
                        },
                        "catchment_size": {
                            "Name": "catchment_size",
                            "Description": ""
                        },
                        "catchment_area_wkt": {
                            "Name": "catchment_area_wkt",
                            "Description": "the WKT string of the catchment polygon if set"
                        },
                        "catchment_area_wkt_org": {
                            "Name": "catchment_area_wkt_org",
                            "Description": "the original WKT string of the site extent if set"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "addlinks": {
                            "Name": "addlinks",
                            "Description": "adds links for easier data discovery to the response"
                        }
                    }
                }
            },
            "getCatchmentHierarchy": {
                "Request": "getCatchmentHierarchy",
                "Description": "Retrieves a hierarchical list of catchments with metadata and parent catchments.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "catchment_no": {
                            "Name": "catchment_no",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getRiverList": {
                "Request": "getRiverList",
                "Description": "Retrieves a list of rivers and water objects with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "river_id": {
                            "Name": "river_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "River/WTO ID"
                        },
                        "river_no": {
                            "Name": "river_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Number"
                        },
                        "river_name": {
                            "Name": "river_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Name"
                        },
                        "catchment_no": {
                            "Name": "catchment_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Catchment Number"
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Catchment ID"
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Catchment Name"
                        },
                        "region_id": {
                            "Name": "region_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Region ID"
                        },
                        "region_no": {
                            "Name": "region_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Region Number"
                        },
                        "region_name": {
                            "Name": "region_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Region Name"
                        },
                        "wtotype_id": {
                            "Name": "wtotype_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Type ID"
                        },
                        "wtotype_name": {
                            "Name": "wtotype_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Type Name"
                        },
                        "wto_altnumber": {
                            "Name": "wto_altnumber",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "River/WTO Alternative Number"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "river_no": {
                            "Name": "river_no",
                            "Description": "River/WTO Number"
                        },
                        "river_id": {
                            "Name": "river_id",
                            "Description": "River/WTO ID"
                        },
                        "river_name": {
                            "Name": "river_name",
                            "Description": "River/WTO Name"
                        },
                        "river_longname": {
                            "Name": "river_longname",
                            "Description": "River/WTO Long Name"
                        },
                        "catchment_no": {
                            "Name": "catchment_no",
                            "Description": "River/WTO Catchment Number"
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "Description": "River/WTO Catchment ID"
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "Description": "River/WTO Catchment Name"
                        },
                        "region_id": {
                            "Name": "region_id",
                            "Description": "River/WTO Region ID"
                        },
                        "region_no": {
                            "Name": "region_no",
                            "Description": "River/WTO Region Number"
                        },
                        "region_name": {
                            "Name": "region_name",
                            "Description": "River/WTO Region Name"
                        },
                        "wtotype_id": {
                            "Name": "wtotype_id",
                            "Description": "River/WTO Type ID"
                        },
                        "wtotype_name": {
                            "Name": "wtotype_name",
                            "Description": "River/WTO Type Name"
                        },
                        "wto_altnumber": {
                            "Name": "wto_altnumber",
                            "Description": "River/WTO Alternative Number"
                        },
                        "wto_order": {
                            "Name": "wto_order",
                            "Description": "River/WTO Order"
                        },
                        "wto_sequence": {
                            "Name": "wto_sequence",
                            "Description": "River/WTO Sequence"
                        },
                        "wto_confluencedistance": {
                            "Name": "wto_confluencedistance",
                            "Description": "River/WTO Distance To Confluence"
                        },
                        "wto_length": {
                            "Name": "wto_length",
                            "Description": "River/WTO Length"
                        },
                        "wto_area_wkt": {
                            "Name": "wto_area_wkt",
                            "Description": "River/WTO Geometry WKT"
                        },
                        "wto_area_wkt_org": {
                            "Name": "wto_area_wkt_org",
                            "Description": "River/WTO Original Geometry WKT"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getStandardRemarkTypeList": {
                "Request": "getStandardRemarkTypeList",
                "Description": "Retrieves a hierarchical list of standard remark types.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "shortname": {
                            "Name": "shortname",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getRatingCurveList": {
                "Request": "getRatingCurveList",
                "Description": "Retrieves a list of rating curves.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return curves for the requested range;from + period: will return curves for the given period starting at the from date;to + period: will return curves for the given period backdating from the to date;period: will return curves for the given period backdating from the current system time;period=complete: will return all curves;from: will return all curves valid at the given from date until the current system time;to: will return all curves valid until the given to date;/: not providing any time filter will return all currently valid curves;",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "filter for one or more station IDs; either station_id, stationgroup_id or a source/target combination can be used"
                        },
                        "stationgroup_id": {
                            "Name": "stationgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "filter for a station group; either station_id, stationgroup_id or a source/target combination can be used"
                        },
                        "source": {
                            "Name": "source",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "filter for the rating curve source, use a list of either site_no/station_no or site_no/station_no/stationparameter_no paths; either station_id, stationgroup_id or a source/target combination can be used"
                        },
                        "target": {
                            "Name": "target",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "optionally filter for the rating curve target, use a list of either site_no/station_no or site_no/station_no/stationparameter_no paths; if present, must have the same count of entries as source; either station_id, stationgroup_id or a source/target combination can be used"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar; as an alternative period can be set to 'complete' to return all data"
                        },
                        "name": {
                            "Name": "name",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "optionally filter for the rating curve name"
                        },
                        "group": {
                            "Name": "group",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "optionally filter for the rating curve group"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "stepsize": {
                            "Name": "stepsize",
                            "Description": "The step size for the rating values, defaults to 1.0; step size overrules steps"
                        },
                        "steps": {
                            "Name": "steps",
                            "Description": "The step count for the rating values; step size overrules steps"
                        },
                        "includeratingtable": {
                            "Name": "includeratingtable",
                            "Description": "optionally set this to false to only return the metadata of rating curves but not the actual values; default is true"
                        },
                        "eta": {
                            "Name": "eta",
                            "Description": "optional parameter to adjust the values for anomalies, valid range from 0.0 to 1.0"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getStationLithology": {
                "Request": "getStationLithology",
                "Description": "Retrieves a list of lithology layers for a station.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        },
                        "gwml2": {
                            "Name": "gwml2",
                            "Description": "GroundwaterML2.0 format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "lithology_id": {
                            "Name": "lithology_id",
                            "Description": "ID"
                        },
                        "color": {
                            "Name": "color",
                            "Description": "Color"
                        },
                        "consistency": {
                            "Name": "consistency",
                            "Description": "Consistency"
                        },
                        "depth_from": {
                            "Name": "depth_from",
                            "Description": "Upper depth limit"
                        },
                        "depth_to": {
                            "Name": "depth_to",
                            "Description": "Lower depth limit"
                        },
                        "pricomp_color": {
                            "Name": "pricomp_color",
                            "Description": "Primary component color"
                        },
                        "pricomp_label": {
                            "Name": "pricomp_label",
                            "Description": "Primary component label"
                        },
                        "pricomp_pricode": {
                            "Name": "pricomp_pricode",
                            "Description": "Primary component primary code"
                        },
                        "pricomp_seccode": {
                            "Name": "pricomp_seccode",
                            "Description": "Primary component secondary code"
                        },
                        "pricomp_priname": {
                            "Name": "pricomp_priname",
                            "Description": "Primary component primary name"
                        },
                        "pricomp_secname": {
                            "Name": "pricomp_secname",
                            "Description": "Primary component secondary name"
                        },
                        "seccomp_color": {
                            "Name": "seccomp_color",
                            "Description": "Secondary component color"
                        },
                        "seccomp_label": {
                            "Name": "seccomp_label",
                            "Description": "Secondary component label"
                        },
                        "seccomp_pricode": {
                            "Name": "seccomp_pricode",
                            "Description": "Secondary component primary code"
                        },
                        "seccomp_seccode": {
                            "Name": "seccomp_seccode",
                            "Description": "Secondary component secondary code"
                        },
                        "seccomp_priname": {
                            "Name": "seccomp_priname",
                            "Description": "Secondary component primary name"
                        },
                        "seccomp_secname": {
                            "Name": "seccomp_secname",
                            "Description": "Secondary component secondary name"
                        },
                        "remark": {
                            "Name": "remark",
                            "Description": "Remark"
                        },
                        "all": {
                            "Name": "all",
                            "Description": "Returns all fields except fillings"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "includefillings": {
                            "Name": "includefillings",
                            "Description": "setting this to true will include the fillings per layer, default is false; will be ignored for format gwml2"
                        },
                        "order": {
                            "Name": "order",
                            "Description": "sets the order in which the layers will be returned by depth, asc/ascending or desc/descending; default is ascending; will be ignored for format gwml2"
                        },
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getStationCasing": {
                "Request": "getStationCasing",
                "Description": "Retrieves a list of casings for a station.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        },
                        "gwml2": {
                            "Name": "gwml2",
                            "Description": "GroundwaterML2.0 format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "casing_id": {
                            "Name": "casing_id",
                            "Description": "ID"
                        },
                        "casing_material": {
                            "Name": "casing_material",
                            "Description": "Color"
                        },
                        "casing_type": {
                            "Name": "casing_type",
                            "Description": "Consistency"
                        },
                        "int_diameter": {
                            "Name": "int_diameter",
                            "Description": "Lower depth limit"
                        },
                        "int_diameter_unit": {
                            "Name": "int_diameter_unit",
                            "Description": "Upper depth limit"
                        },
                        "casing_from": {
                            "Name": "casing_from",
                            "Description": "Primary component color"
                        },
                        "casing_to": {
                            "Name": "casing_to",
                            "Description": "Primary component label"
                        },
                        "casing_fromto_unit": {
                            "Name": "casing_fromto_unit",
                            "Description": "Primary component primary code"
                        },
                        "casing_depth": {
                            "Name": "casing_depth",
                            "Description": "Primary component secondary code"
                        },
                        "casing_depth_unit": {
                            "Name": "casing_depth_unit",
                            "Description": "Primary component primary name"
                        },
                        "perf_interval": {
                            "Name": "perf_interval",
                            "Description": "Primary component secondary name"
                        },
                        "all": {
                            "Name": "all",
                            "Description": "Returns all fields"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "order": {
                            "Name": "order",
                            "Description": "sets the order in which the layers will be returned by depth, asc/ascending or desc/descending; default is ascending; will be ignored for format gwml2"
                        },
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getStationDocumentList": {
                "Request": "getStationDocumentList",
                "Description": "Retrieves a list of station documents with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_fileext": {
                            "Name": "document_fileext",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_key": {
                            "Name": "document_key",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_title": {
                            "Name": "document_title",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_width": {
                            "Name": "document_width",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_height": {
                            "Name": "document_height",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_sourceurl": {
                            "Name": "document_sourceurl",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_publisher": {
                            "Name": "document_publisher",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_id": {
                            "Name": "document_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_doctype": {
                            "Name": "document_doctype",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "event_shortname": {
                            "Name": "event_shortname",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "event_id": {
                            "Name": "event_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "document_private": {
                            "Name": "document_private",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "hydroevent_label": {
                            "Name": "hydroevent_label",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "hydroevent_id": {
                            "Name": "hydroevent_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "report_id": {
                            "Name": "report_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "event_label": {
                            "Name": "event_label",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "Description": ""
                        },
                        "document_fileext": {
                            "Name": "document_fileext",
                            "Description": ""
                        },
                        "document_modified": {
                            "Name": "document_modified",
                            "Description": ""
                        },
                        "document_key": {
                            "Name": "document_key",
                            "Description": ""
                        },
                        "document_title": {
                            "Name": "document_title",
                            "Description": ""
                        },
                        "document_zip": {
                            "Name": "document_zip",
                            "Description": ""
                        },
                        "document_width": {
                            "Name": "document_width",
                            "Description": ""
                        },
                        "document_height": {
                            "Name": "document_height",
                            "Description": ""
                        },
                        "document_size": {
                            "Name": "document_size",
                            "Description": ""
                        },
                        "document_created": {
                            "Name": "document_created",
                            "Description": ""
                        },
                        "document_publisher": {
                            "Name": "document_publisher",
                            "Description": ""
                        },
                        "document_validfrom": {
                            "Name": "document_validfrom",
                            "Description": ""
                        },
                        "document_datastart": {
                            "Name": "document_datastart",
                            "Description": ""
                        },
                        "document_id": {
                            "Name": "document_id",
                            "Description": ""
                        },
                        "document_validuntil": {
                            "Name": "document_validuntil",
                            "Description": ""
                        },
                        "document_mime": {
                            "Name": "document_mime",
                            "Description": ""
                        },
                        "document_dataend": {
                            "Name": "document_dataend",
                            "Description": ""
                        },
                        "document_doctype": {
                            "Name": "document_doctype",
                            "Description": ""
                        },
                        "document_sourceurl": {
                            "Name": "document_sourceurl",
                            "Description": ""
                        },
                        "document_period": {
                            "Name": "document_period",
                            "Description": ""
                        },
                        "document_periodreference": {
                            "Name": "document_periodreference",
                            "Description": ""
                        },
                        "document_software": {
                            "Name": "document_software",
                            "Description": ""
                        },
                        "document_computer": {
                            "Name": "document_computer",
                            "Description": ""
                        },
                        "document_subtitle": {
                            "Name": "document_subtitle",
                            "Description": ""
                        },
                        "event_shortname": {
                            "Name": "event_shortname",
                            "Description": ""
                        },
                        "event_id": {
                            "Name": "event_id",
                            "Description": ""
                        },
                        "document_private": {
                            "Name": "document_private",
                            "Description": ""
                        },
                        "hydroevent_label": {
                            "Name": "hydroevent_label",
                            "Description": ""
                        },
                        "document_copyright": {
                            "Name": "document_copyright",
                            "Description": ""
                        },
                        "hydroevent_id": {
                            "Name": "hydroevent_id",
                            "Description": ""
                        },
                        "report_id": {
                            "Name": "report_id",
                            "Description": ""
                        },
                        "event_label": {
                            "Name": "event_label",
                            "Description": ""
                        },
                        "all": {
                            "Name": "all",
                            "Description": "set this parameter to return all available fields"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "groupby1": {
                            "Name": "groupby1",
                            "Description": "objson format only - groups response list by the given field as sub object in the json; all returnfields can be used"
                        },
                        "groupby2": {
                            "Name": "groupby2",
                            "Description": "objson format only - groups response list already grouped by groupby1 by the given field as second level sub objects in the json; all returnfields can be used"
                        },
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET)"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getStationDocument": {
                "Request": "getStationDocument",
                "Description": "Retrieves a station document by id.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "document_id": {
                            "Name": "document_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "n/a": {
                            "Name": "n/a",
                            "Description": "return format will depend on content"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        }
                    }
                }
            },
            "getTimeseriesList": {
                "Request": "getTimeseriesList",
                "Description": "Retrieves a list of timeseries with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "(yes)",
                            "Comma separated list": "(yes)",
                            "Description": "The timeseries path as definied in WISKI7 - 'site_no/station_no/stationparameter_no/ts_shortname'; A single path can be used with wildcards, or a comma seperated list of paths without wildcards; using the ts_path filter disables all other filters"
                        },
                        "ts_name": {
                            "Name": "ts_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "ts_shortname": {
                            "Name": "ts_shortname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "ts_type_id": {
                            "Name": "ts_type_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "timeseriesgroup_id": {
                            "Name": "timeseriesgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        },
                        "stationgroup_id": {
                            "Name": "stationgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "Cannot be used together with other id or path filters"
                        },
                        "parametergroup_id": {
                            "Name": "parametergroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": ""
                        },
                        "fulltext": {
                            "Name": "fulltext",
                            "* as wildcard": "yes",
                            "Comma separated list": "no",
                            "Description": "fulltext filter for all timeseries metadata fields"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "geojson": {
                            "Name": "geojson",
                            "Description": "official GEOJSON format"
                        },
                        "kml": {
                            "Name": "kml",
                            "Description": "Keyhole Markup Language by Google and OGC"
                        },
                        "lpk": {
                            "Name": "lpk",
                            "Description": "ESRI Layer Package format"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "station_no": {
                            "Name": "station_no",
                            "Description": ""
                        },
                        "station_id": {
                            "Name": "station_id",
                            "Description": ""
                        },
                        "station_name": {
                            "Name": "station_name",
                            "Description": ""
                        },
                        "station_latitude": {
                            "Name": "station_latitude",
                            "Description": ""
                        },
                        "station_longitude": {
                            "Name": "station_longitude",
                            "Description": ""
                        },
                        "station_carteasting": {
                            "Name": "station_carteasting",
                            "Description": ""
                        },
                        "station_cartnorthing": {
                            "Name": "station_cartnorthing",
                            "Description": ""
                        },
                        "station_local_x": {
                            "Name": "station_local_x",
                            "Description": ""
                        },
                        "station_local_y": {
                            "Name": "station_local_y",
                            "Description": ""
                        },
                        "station_georefsystem": {
                            "Name": "station_georefsystem",
                            "Description": ""
                        },
                        "station_longname": {
                            "Name": "station_longname",
                            "Description": ""
                        },
                        "ts_id": {
                            "Name": "ts_id",
                            "Description": ""
                        },
                        "ts_name": {
                            "Name": "ts_name",
                            "Description": ""
                        },
                        "ts_shortname": {
                            "Name": "ts_shortname",
                            "Description": ""
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "Description": "The timeseries path as definied in WISKI7 - 'site_no/station_no/stationparameter_no/ts_shortname'"
                        },
                        "ts_type_id": {
                            "Name": "ts_type_id",
                            "Description": ""
                        },
                        "ts_type_name": {
                            "Name": "ts_type_name",
                            "Description": ""
                        },
                        "parametertype_id": {
                            "Name": "parametertype_id",
                            "Description": ""
                        },
                        "parametertype_name": {
                            "Name": "parametertype_name",
                            "Description": ""
                        },
                        "stationparameter_name": {
                            "Name": "stationparameter_name",
                            "Description": ""
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "Description": ""
                        },
                        "stationparameter_longname": {
                            "Name": "stationparameter_longname",
                            "Description": ""
                        },
                        "ts_unitname": {
                            "Name": "ts_unitname",
                            "Description": ""
                        },
                        "ts_unitsymbol": {
                            "Name": "ts_unitsymbol",
                            "Description": ""
                        },
                        "ts_unitname_abs": {
                            "Name": "ts_unitname_abs",
                            "Description": ""
                        },
                        "ts_unitsymbol_abs": {
                            "Name": "ts_unitsymbol_abs",
                            "Description": ""
                        },
                        "site_no": {
                            "Name": "site_no",
                            "Description": ""
                        },
                        "site_id": {
                            "Name": "site_id",
                            "Description": ""
                        },
                        "site_name": {
                            "Name": "site_name",
                            "Description": ""
                        },
                        "catchment_no": {
                            "Name": "catchment_no",
                            "Description": ""
                        },
                        "catchment_id": {
                            "Name": "catchment_id",
                            "Description": ""
                        },
                        "catchment_name": {
                            "Name": "catchment_name",
                            "Description": ""
                        },
                        "coverage": {
                            "Name": "coverage",
                            "Description": "will add from/to values of the data coverage"
                        },
                        "ts_density": {
                            "Name": "ts_density",
                            "Description": "will add an estimation of how many values this timeseries theoretically has per year"
                        },
                        "ts_exchange": {
                            "Name": "ts_exchange",
                            "Description": "will add the timeseries exchange ID in case it exists"
                        },
                        "ts_spacing": {
                            "Name": "ts_spacing",
                            "Description": "value spacing of equidistant timeseries as ISO period"
                        },
                        "ts_clientvalue##": {
                            "Name": "ts_clientvalue##",
                            "Description": "timeseries client values reaching from 1-10, e.g. ts_clientvalue4"
                        },
                        "datacart": {
                            "Name": "datacart",
                            "Description": "use this fieldname to retrieve the result as a full 'Datacart', other entries will be ignored if existent"
                        },
                        "ca_site": {
                            "Name": "ca_site",
                            "Description": "returns custom site attributes, optionally use parameter ca_site_returnfields to select specific fields"
                        },
                        "ca_sta": {
                            "Name": "ca_sta",
                            "Description": "returns custom station attributes, optionally use parameter ca_sta_returnfields to select specific fields"
                        },
                        "ca_par": {
                            "Name": "ca_par",
                            "Description": "returns custom parameter attributes, optionally use parameter ca_par_returnfields to select specific fields"
                        },
                        "ca_ts": {
                            "Name": "ca_ts",
                            "Description": "returns custom timeseries attributes, optionally use parameter ca_ts_returnfields to select specific fields"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET)"
                        },
                        "ca_site_returnfields": {
                            "Name": "ca_site_returnfields",
                            "Description": "selects a set of custom defined site attributes (returnfield 'ca_site' must be active, allows comma separated list)"
                        },
                        "ca_sta_returnfields": {
                            "Name": "ca_sta_returnfields",
                            "Description": "selects a set of custom defined station attributes (returnfield 'ca_sta' must be active, allows comma separated list)"
                        },
                        "ca_par_returnfields": {
                            "Name": "ca_par_returnfields",
                            "Description": "selects a set of custom defined parameter attributes (returnfield 'ca_par' must be active, allows comma separated list)"
                        },
                        "ca_ts_returnfields": {
                            "Name": "ca_ts_returnfields",
                            "Description": "selects a set of custom defined timeseries attributes (returnfield 'ca_ts' must be active, allows comma separated list)"
                        },
                        "addlinks": {
                            "Name": "addlinks",
                            "Description": "adds links for easier data discovery to the response"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "orderby": {
                            "Name": "orderby",
                            "Description": "Sort the response by one of the following fields: station_name, ts_shortname, ts_id, station_id, stationparameter_name, station_no, parametertype_name, ts_name, stationparameter_no, ts_path, stationparameter_longname, from, to"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getTimeseriesTypeList": {
                "Request": "getTimeseriesTypeList",
                "Description": "Retrieves a timeseries type list.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_type_id": {
                            "Name": "ts_type_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "ts_shortname": {
                            "Name": "ts_shortname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "ts_name": {
                            "Name": "ts_name",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": ""
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "ts_type_id": {
                            "Name": "ts_type_id",
                            "Description": ""
                        },
                        "ts_type_name": {
                            "Name": "ts_type_name",
                            "Description": ""
                        },
                        "ts_name": {
                            "Name": "ts_name",
                            "Description": ""
                        },
                        "ts_shortname": {
                            "Name": "ts_shortname",
                            "Description": ""
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                }
            },
            "getTimeseriesValues": {
                "Request": "getTimeseriesValues",
                "Description": "Retrieves timeseries data.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return the requested range;from + period: will return the given period starting at the from date;to + period: will return the given period backdating from the to date;period: will return the given period backdating from the current system time;period=complete: will return the complete coverage of all requested timeseries;from: will return all data starting at the given from date until the current system time;to: will return all data of the timeseries until the given to date;futureperiod: will return the given period starting from the current system time;period + futureperiod: will return the combined given periods from the past and the future;from + futureperiod: will return the combined given period starting at the given from date until the end of the future period starting at the current system time;changedSince: will return all data of the timeseries changed since the given date (requires active ts edit history in WISKI)",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or timeseriesgroup_id or ts_path can be used; one or more transformations may be concatenated to each ID with a semicolon, e.g. ts_id=123;factor(3.0)"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "(yes)",
                            "Comma separated list": "(yes)",
                            "Description": "the timeseries path according to WISKI7; a single path with placeholders may be used or a comma separated list without placeholders; either ts_id or timeseriesgroup_id or ts_path can be used; one or more transformations may be concatenated to each path with a semicolon, e.g. ts_path=a/b/c/d;factor(3.0)"
                        },
                        "timeseriesgroup_id": {
                            "Name": "timeseriesgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or timeseriesgroup_id or ts_path can be used"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar; as an alternative period can be set to 'complete' to return all data"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        },
                        "changedsince": {
                            "Name": "changedsince",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, will return all data of the timeseries changed since the given date (requires active ts edit history in WISKI); may be combined with period to limit data retrieval from the past"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "dajson": {
                            "Name": "dajson",
                            "Description": "Optimised data array JSON format for timeseries values"
                        },
                        "esrijson": {
                            "Name": "esrijson",
                            "Description": "(DEPRECATED) ESRI-like timeseries value JSON format"
                        },
                        "wml2": {
                            "Name": "wml2",
                            "Description": "WaterML2.0 timeseries value format"
                        },
                        "zrxp": {
                            "Name": "zrxp",
                            "Description": "KISTERS ZRXP format with basic content"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)\nPlease note that transformation results will have fixed automatic returnfields, only additional quality, release state and comment columns can be selected.",
                    "Content": {
                        "Timestamp": {
                            "Name": "Timestamp",
                            "Description": ""
                        },
                        "Value": {
                            "Name": "Value",
                            "Description": "Default value column if present in the timeseries"
                        },
                        "Interpolation Type": {
                            "Name": "Interpolation Type",
                            "Description": ""
                        },
                        "Quality Code": {
                            "Name": "Quality Code",
                            "Description": ""
                        },
                        "Quality Code Name": {
                            "Name": "Quality Code Name",
                            "Description": ""
                        },
                        "Quality Code Description": {
                            "Name": "Quality Code Description",
                            "Description": ""
                        },
                        "Quality Code Color": {
                            "Name": "Quality Code Color",
                            "Description": ""
                        },
                        "Aggregation Accuracy": {
                            "Name": "Aggregation Accuracy",
                            "Description": "Percentage of not missing/good values for aggregation timeseries"
                        },
                        "Absolute Value": {
                            "Name": "Absolute Value",
                            "Description": "Absolute value column if present in the timeseries"
                        },
                        "AV Interpolation Type": {
                            "Name": "AV Interpolation Type",
                            "Description": ""
                        },
                        "AV Quality Code": {
                            "Name": "AV Quality Code",
                            "Description": ""
                        },
                        "AV Quality Code Name": {
                            "Name": "AV Quality Code Name",
                            "Description": ""
                        },
                        "AV Quality Code Description": {
                            "Name": "AV Quality Code Description",
                            "Description": ""
                        },
                        "AV Quality Code Color": {
                            "Name": "AV Quality Code Color",
                            "Description": ""
                        },
                        "Runoff Value": {
                            "Name": "Runoff Value",
                            "Description": "Runoff value column if present in the timeseries"
                        },
                        "RV Interpolation Type": {
                            "Name": "RV Interpolation Type",
                            "Description": ""
                        },
                        "RV Quality Code": {
                            "Name": "RV Quality Code",
                            "Description": ""
                        },
                        "RV Quality Code Name": {
                            "Name": "RV Quality Code Name",
                            "Description": ""
                        },
                        "RV Quality Code Description": {
                            "Name": "RV Quality Code Description",
                            "Description": ""
                        },
                        "RV Quality Code Color": {
                            "Name": "RV Quality Code Color",
                            "Description": ""
                        },
                        "Stagesource Value": {
                            "Name": "Stagesource Value",
                            "Description": "Stagesource value column if present in the timeseries"
                        },
                        "Occurrance Timestamp": {
                            "Name": "Occurrance Timestamp",
                            "Description": "Time of occurrance for statistical values (e.g. time of the monthly max)"
                        },
                        "Occurrance Count": {
                            "Name": "Occurrance Count",
                            "Description": "Occurrance count for statistical values"
                        },
                        "Timeseries Comment": {
                            "Name": "Timeseries Comment",
                            "Description": "Any comments written at the timeseries level, separated with a ';'"
                        },
                        "Agent Comment": {
                            "Name": "Agent Comment",
                            "Description": "Any comments written at the agent level, separated with a ';'"
                        },
                        "Station Comment": {
                            "Name": "Station Comment",
                            "Description": "Any comments written at the station level, separated with a ';'"
                        },
                        "Parameter Comment": {
                            "Name": "Parameter Comment",
                            "Description": "Any comments written at the parameter level, separated with a ';'"
                        },
                        "Data Comment": {
                            "Name": "Data Comment",
                            "Description": "Any comments written at the data level, separated with a ';'"
                        },
                        "Release State": {
                            "Name": "Release State",
                            "Description": "Any release states written at the data level, separated with a ';'"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "metadata": {
                            "Name": "metadata",
                            "Description": "set metadata=true to add more metadata fields to responses"
                        },
                        "md_returnfields": {
                            "Name": "md_returnfields",
                            "Description": "specify exactly which metadata fields should be returned; available fields: ts_id, ts_path, ts_name, ts_shortname, station_no, station_id, station_latitude, station_longitude, station_carteasting, station_cartnorthing, station_local_x, station_local_y, station_name, stationparameter_name, stationparameter_no, stationparameter_longname, ts_unitname, ts_unitsymbol, ts_unitname_abs, ts_unitsymbol_abs, parametertype_id, parametertype_name, ts_exchange, ts_precision, station_longname, site_id, site_no, site_name, catchment_id, catchment_no, catchment_name, ensembledate, ensembledispatchinfo, timezone (the timezone of the values), ts_spacing, ts_clientvalue## (client values 1-10), river_name, custom_attributes (deprecated - use ca_sta), ca_site (custom site attributes), ca_sta (custom station attributes), ca_par (custom parameter attributes), ca_ts (custom timeseries attributes)"
                        },
                        "ca_site_returnfields": {
                            "Name": "ca_site_returnfields",
                            "Description": "selects a set of custom defined site attributes (md_returnfield 'ca_site' must be active, allows comma separated list)"
                        },
                        "ca_sta_returnfields": {
                            "Name": "ca_sta_returnfields",
                            "Description": "selects a set of custom defined station attributes (md_returnfield 'ca_sta' must be active, allows comma separated list)"
                        },
                        "ca_par_returnfields": {
                            "Name": "ca_par_returnfields",
                            "Description": "selects a set of custom defined parameter attributes (md_returnfield 'ca_par' must be active, allows comma separated list)"
                        },
                        "ca_ts_returnfields": {
                            "Name": "ca_ts_returnfields",
                            "Description": "selects a set of custom defined timeseries attributes (md_returnfield 'ca_ts' must be active, allows comma separated list)"
                        },
                        "custattr_md_returnfields": {
                            "Name": "custattr_md_returnfields",
                            "Description": "DEPRECATED - use ca_sta_returnfields instead"
                        },
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET) or 'individual' to use individual timeseries timezones"
                        },
                        "crs": {
                            "Name": "crs",
                            "Description": "set crs=webmercator to retrieve position data in webmercator projection (only applies for esrijson format)"
                        },
                        "valueorder": {
                            "Name": "valueorder",
                            "Description": "sets the order in which the values will be returned, asc/ascending or desc/descending; default is ascending"
                        },
                        "useprecision": {
                            "Name": "useprecision",
                            "Description": "advises KiWIS to use the WISKI precision for value formatting, true or false; default is true"
                        },
                        "valuelocale": {
                            "Name": "valuelocale",
                            "Description": "sets the locale in which the values will be formatted; default is en; for de, csvDiv will automatically be ';', all json formats will use locale en; only applies if useprecision=true"
                        },
                        "valuesasstring": {
                            "Name": "valuesasstring",
                            "Description": "advises KiWIS to return timeseries values in JSON as string instead of number, true or false; default is false"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "forcecontentdisposition": {
                            "Name": "forcecontentdisposition",
                            "Description": "setting this to true advises KiWIS to set a content disposition header for all formats, triggering the browser to offer a download"
                        },
                        "getensembletimestampsonly": {
                            "Name": "getensembletimestampsonly",
                            "Description": "can only be used if all ts_ids are ensemble timeseries and will return a list of available fore-/hindcast timestamps without values; cannot be used for wml2 format"
                        },
                        "sincefirstchange": {
                            "Name": "sincefirstchange",
                            "Description": "only active for the changedsince filter; retrieves all data since the first changed timestamp without gaps"
                        },
                        "locationascolumns": {
                            "Name": "locationascolumns",
                            "Description": "setting this to true, adds lat/lon fields as column to every value; will be ignored for WML2 and ZRXP format"
                        },
                        "minquality": {
                            "Name": "minquality",
                            "Description": "minimum quality (0-255), values with lower value (higher quality) will be removed (not applicable for transformation results)"
                        },
                        "maxquality": {
                            "Name": "maxquality",
                            "Description": "maximum quality (0-255), values with higher value (lower quality) will be removed (not applicable for transformation results)"
                        },
                        "qualitylist": {
                            "Name": "qualitylist",
                            "Description": "comma separated list of exact quality codes, values with any other quality will be removed (not applicable for transformation results)"
                        },
                        "gapdetection": {
                            "Name": "gapdetection",
                            "Description": "detects and fills gaps with missings in equidistant timeseries (cannot be used with: last values, ensembles, transformation results, changedSince); Possible values: fillgaps - fills detected gaps between existing values, fillrange - fills the whole requested time range so that there either is a valid value or a missing for each timestamp, markgaps - marks detected gaps between existing values by inserting one missing at the beginning and one missing at the end of each gap"
                        },
                        "enhanceborders": {
                            "Name": "enhanceborders",
                            "Description": "setting this to true, tries to extend the retrieved time range per timeseries to include border values for graph display (cannot be used with: changedSince, will be ignored for ensembles and last values)"
                        },
                        "commentlanguage": {
                            "Name": "commentlanguage",
                            "Description": "the language of comments based on standard remark types that will be returned, default is 'en'"
                        },
                        "excelsheetlabel": {
                            "Name": "excelsheetlabel",
                            "Description": "pattern for the excel sheet label: default (ts_path), nosite (ts_path without site), par_ts (only parameter and timeseries part of the path), par (parameter only), ts (timeseries only)"
                        },
                        "usewiskiqualityformissings": {
                            "Name": "usewiskiqualityformissings",
                            "Description": "if set to true, will use the WISKI quality code 255 for missings instead of -1; only applies to zrxp format"
                        },
                        "transformation": {
                            "Name": "transformation",
                            "Description": "the transformation to use; only applies for requests with timeseriesgroup_id filter and appends the transformation to all timeseries of all groups"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                },
                "Transformations": {
                    "Description": "Web Transformations",
                    "Content": [
                        {
                            "name": "Aggregate",
                            "key": "aggregate",
                            "description": "Builds representative periodic values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, yearly, year, monthly, month, daily, day, hourly, hour",
                                "Aggregation Types (MANDATORY LIST): min, max, mean, average, total, counts, perc-#"
                            ],
                            "returnfields": [
                                "Count",
                                "Interpolation Type",
                                "Average",
                                "Quality Code",
                                "Mean",
                                "Total",
                                "Maximum",
                                "Minimum",
                                "Timestamp",
                                "P#"
                            ],
                            "examples": [
                                "aggregate(daily~total)",
                                "aggregate(yearly~mean~min~max)",
                                "aggregate(hourly~perc-25~perc-75)"
                            ]
                        },
                        {
                            "name": "Factor",
                            "key": "factor",
                            "description": "Multiplies each value by the specified factor and optionally sets a new unit (does not affect the unit fields in KiWIS!)",
                            "attributes": [
                                "Expression (MANDATORY): *",
                                "Unit (OPTIONAL): *"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "factor(2.0)",
                                "factor(2.0/3.0~M)"
                            ]
                        },
                        {
                            "name": "Moving Total",
                            "key": "movtotal",
                            "description": "Builds moving total values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, decade, year, yearly, month, monthly, day, daily, hour, hourly",
                                "Algorithm (OPTIONAL): simple, timeweighted"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "movtotal(yearly~simple)",
                                "movtotal(daily)"
                            ]
                        },
                        {
                            "name": "Primary Statistics",
                            "key": "primarystatistics",
                            "description": "Builds a single statistical value. Mode 'por' is default.",
                            "attributes": [
                                "Statistical Value (MANDATORY): min, max, mean, average, total, sum, perc-#",
                                "Time Range (OPTIONAL): por, range"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Average",
                                "Sum",
                                "Quality Code",
                                "Mean",
                                "Total",
                                "Maximum",
                                "Minimum",
                                "Timestamp",
                                "P#"
                            ],
                            "examples": [
                                "primarystatistics(max)",
                                "primarystatistics(mean~range)"
                            ]
                        },
                        {
                            "name": "Cumulate",
                            "key": "cumulate",
                            "description": "Cumulates the data until the end of the interval is reached and starts with the next value again. If no interval is given, cumulation will be done for all values.",
                            "attributes": [
                                "Interval (OPTIONAL): HHMMSS, decade, year, month, day, hour"
                            ],
                            "returnfields": [
                                "Value",
                                "Quality Code",
                                "Timestamp",
                                "Interpolation Type"
                            ],
                            "examples": [
                                "Cumulate(day)",
                                "Cumulate()"
                            ]
                        },
                        {
                            "name": "Moving Average",
                            "key": "movavg",
                            "description": "Builds moving average values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, decade, year, yearly, month, monthly, day, daily, hour, hourly",
                                "Use centered interval (OPTIONAL): center",
                                "Algorithm (OPTIONAL): arithmetic, timeweighted"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Mean Value",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "movavg(monthly~center~arithmetic)",
                                "movavg(daily)"
                            ]
                        },
                        {
                            "name": "Moving Maximum",
                            "key": "movmax",
                            "description": "Builds moving maximum values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, decade, year, yearly, month, monthly, day, daily, hour, hourly",
                                "Use centered interval (OPTIONAL): center"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Max Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "movmax(monthly~center)",
                                "movmax(daily)"
                            ]
                        },
                        {
                            "name": "Moving Minimum",
                            "key": "movmin",
                            "description": "Builds moving minimum values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, decade, year, yearly, month, monthly, day, daily, hour, hourly",
                                "Use centered interval (OPTIONAL): center"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Min Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "movmin(monthly~center)",
                                "movmin(daily)"
                            ]
                        },
                        {
                            "name": "Moving Standard Deviation",
                            "key": "movstddev",
                            "description": "Builds moving standard deviation values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, decade, year, yearly, month, monthly, day, daily, hour, hourly",
                                "Use centered interval (OPTIONAL): center"
                            ],
                            "returnfields": [
                                "StdDev Value",
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "movstddev(monthly~center)",
                                "movstddev(daily)"
                            ]
                        },
                        {
                            "name": "BoxWhisker",
                            "key": "boxwhisker",
                            "description": "Builds values for a box-whisker-plot.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, decade, year, yearly, month, monthly, day, daily, hour, hourly",
                                "Whisker Min (0.0-1.0) (OPTIONAL): #.#",
                                "Box Min (0.0-1.0) (OPTIONAL): #.#",
                                "Box Max (0.0-1.0) (OPTIONAL): #.#",
                                "Whisker Max (0.0-1.0) (OPTIONAL): #.#",
                                "Method (OPTIONAL): excel, hazen, sasd4, sasd5, vdi"
                            ],
                            "returnfields": [
                                "Box Minimum",
                                "Minimum",
                                "Median",
                                "Maximum",
                                "Mean",
                                "Interpolation Type",
                                "Whisker Maximum",
                                "Quality Code",
                                "Timestamp",
                                "Whisker Minimum",
                                "Box Maximum"
                            ],
                            "examples": [
                                "boxwhisker(monthly~0.05~0.2~0.8~0.95)",
                                "boxwhisker(daily)"
                            ]
                        },
                        {
                            "name": "Maximum",
                            "key": "maximum",
                            "description": "Builds periodic maximum values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, yearly, monthly, weekly, daily, hourly",
                                "Use occurrence timestamp (OPTIONAL): event",
                                "Interpolation Type (OPTIONAL): since, until"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "maximum(daily)",
                                "maximum(yearly~event)"
                            ]
                        },
                        {
                            "name": "Minimum",
                            "key": "minimum",
                            "description": "Builds periodic minimum values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, yearly, monthly, weekly, daily, hourly",
                                "Use occurrence timestamp (OPTIONAL): event",
                                "Interpolation Type (OPTIONAL): since, until"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "maximum(daily)",
                                "maximum(yearly~event)"
                            ]
                        },
                        {
                            "name": "Total",
                            "key": "total",
                            "description": "Builds periodic minimum values.",
                            "attributes": [
                                "Interval (MANDATORY): HHMMSS, decadal, yearly, monthly, weekly, daily, hourly",
                                "Algorithm (OPTIONAL): simple, timeweighted",
                                "Interpolation Type (OPTIONAL): since, until"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "total(daily)",
                                "total(yearly~simple)"
                            ]
                        },
                        {
                            "name": "Aggregation Interval",
                            "key": "aggregationinterval",
                            "description": "Defines the aggregation interval for subsequent transformations.",
                            "attributes": [
                                "Aggregation Start (MANDATORY): Relative or absolute time- \"(0)-(0)-(0)T(0):(0):(0)\" / yyyy-MM-dd'T'HH:mm:ss, decadal, yearly, year, monthly, month, daily, day, hourly, hour, hydrology, meteorology",
                                "Timezone (OPTIONAL): #",
                                "Use DST (OPTIONAL): true, false"
                            ],
                            "returnfields": [
                                "Interpolation Type",
                                "Quality Code",
                                "Value",
                                "Timestamp"
                            ],
                            "examples": [
                                "aggregationinterval(Meteorology)",
                                "aggregationinterval(Hydrology)",
                                "aggregationinterval(07:00:00~Europe/Berlin~false)"
                            ]
                        }
                    ]
                }
            },
            "getTimeseriesValueLayer": {
                "Request": "getTimeseriesValueLayer",
                "Description": "Retrieves a layer of timeseries values for a given date including location data.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id, ts_path, timeseriesgroup_id or bbox can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "(yes)",
                            "Comma separated list": "(yes)",
                            "Description": "the timeseries path according to WISKI7; a single path with placeholders may be used or a comma separated list without placeholders; either ts_id, ts_path, timeseriesgroup_id or bbox can be used"
                        },
                        "timeseriesgroup_id": {
                            "Name": "timeseriesgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id, ts_path, timeseriesgroup_id or bbox can be used"
                        },
                        "bbox": {
                            "Name": "bbox",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "either ts_id, ts_path, timeseriesgroup_id or bbox can be used; comma separated list with four values in order min_x, min_y, max_x, max_y; use 'crs' parameter to choose between local and global coordinates; fields stationparameter_no and ts_shortname are required for bbox; the function will select 0 or 1 timeseries per station in the area according to filters"
                        },
                        "stationparameter_no": {
                            "Name": "stationparameter_no",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "with bbox filter only; if multiple values are given the order will be considered for timeseries selection"
                        },
                        "ts_shortname": {
                            "Name": "ts_shortname",
                            "* as wildcard": "yes",
                            "Comma separated list": "yes",
                            "Description": "with bbox filter only; if multiple values are given the order will be considered for timeseries selection"
                        },
                        "date": {
                            "Name": "date",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "the date to request values for, see date formats"
                        },
                        "valuecolumn": {
                            "Name": "valuecolumn",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "the value column to use for output; valid values are: default, absolute, runoff, stagesource, ReturnPeriod"
                        },
                        "site_no": {
                            "Name": "site_no",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "can be used to additionally filter for sites"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "esrijson": {
                            "Name": "esrijson",
                            "Description": "(DEPRECATED) ESRI-like timeseries value JSON format"
                        },
                        "geojson": {
                            "Name": "geojson",
                            "Description": "official GEOJSON format"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "Description": ""
                        },
                        "timestamp": {
                            "Name": "timestamp",
                            "Description": ""
                        },
                        "ts_value": {
                            "Name": "ts_value",
                            "Description": ""
                        },
                        "req_timestamp": {
                            "Name": "req_timestamp",
                            "Description": "Timestamp as sent in the date parameter"
                        },
                        "occ_timestamp": {
                            "Name": "occ_timestamp",
                            "Description": "Timestamp of occurance for statistics timeseries"
                        },
                        "ts_intpol": {
                            "Name": "ts_intpol",
                            "Description": "Interpolation Type"
                        },
                        "q_code": {
                            "Name": "q_code",
                            "Description": "Quality Code"
                        },
                        "q_code_name": {
                            "Name": "q_code_name",
                            "Description": "Quality Code Name"
                        },
                        "q_code_desc": {
                            "Name": "q_code_desc",
                            "Description": "Quality Code Description"
                        },
                        "q_code_color": {
                            "Name": "q_code_color",
                            "Description": "Quality Code Color"
                        },
                        "occ_count": {
                            "Name": "occ_count",
                            "Description": "Count of occurance for statistics timeseries"
                        },
                        "sta_location": {
                            "Name": "sta_location",
                            "Description": "Station coordinates with consideration of the crs paramter"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "metadata": {
                            "Name": "metadata",
                            "Description": "set metadata=true to add more metadata fields to responses"
                        },
                        "md_returnfields": {
                            "Name": "md_returnfields",
                            "Description": "specify exactly which metadata fields should be returned; available fields: ts_id, ts_path, ts_name, ts_shortname, station_no, station_id, station_name, stationparameter_name, stationparameter_no, stationparameter_longname, ts_unitname, ts_unitsymbol, ts_unitname_abs, ts_unitsymbol_abs, parametertype_id, parametertype_name, station_longname, custom_attributes (deprecated - use ca_sta), station_count (adds a field containing the number of duplicate stations per entry), aggaccuracy_percent (adds percentage of not missing/good values for aggregation timeseries), timezone (the timezone of the values), group_item_order (only for one group), site_id, site_no, site_name, catchment_id, catchment_no, catchment_name, object_type, object_type_shortname, station_area_wkt, station_area_wkt_org, ts_clientvalue## (client values 1-10), ca_site (custom site attributes), ca_sta (custom station attributes), ca_par (custom parameter attributes), ca_ts (custom timeseries attributes)"
                        },
                        "ca_site_returnfields": {
                            "Name": "ca_site_returnfields",
                            "Description": "selects a set of custom defined site attributes (md_returnfield 'ca_site' must be active, allows comma separated list)"
                        },
                        "ca_sta_returnfields": {
                            "Name": "ca_sta_returnfields",
                            "Description": "selects a set of custom defined station attributes (md_returnfield 'ca_sta' must be active, allows comma separated list)"
                        },
                        "ca_par_returnfields": {
                            "Name": "ca_par_returnfields",
                            "Description": "selects a set of custom defined parameter attributes (md_returnfield 'ca_par' must be active, allows comma separated list)"
                        },
                        "ca_ts_returnfields": {
                            "Name": "ca_ts_returnfields",
                            "Description": "selects a set of custom defined timeseries attributes (md_returnfield 'ca_ts' must be active, allows comma separated list)"
                        },
                        "custattr_md_returnfields": {
                            "Name": "custattr_md_returnfields",
                            "Description": "DEPRECATED - use ca_sta_returnfields instead"
                        },
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET)"
                        },
                        "crs": {
                            "Name": "crs",
                            "Description": "set to 'localxy', 'regional' or 'global' to use the local, regional or global station reference system, set to 'webmercator' to retrieve position data in webmercator projection (only applies for esrijson format and uses global station coordinates for calculation)"
                        },
                        "orderby": {
                            "Name": "orderby",
                            "Description": "sorts the result set by the given field, this can be helpful e.g. for drawing order in a map; available fields: value, timestamp, station_name, station_no, group_item_order (only with one group)"
                        },
                        "orderdir": {
                            "Name": "orderdir",
                            "Description": "sets the sort direction, only usable together with 'orderby'; possible values: asc, desc; default is ascending"
                        },
                        "invalidperiod": {
                            "Name": "invalidperiod",
                            "Description": "sets the deviation period between requested and returned timestamp to determine which values will be invalidated, must be used together with 'invalidvalue'; can be used like the normal period parameter for other requests"
                        },
                        "invalidvalue": {
                            "Name": "invalidvalue",
                            "Description": "sets the value that will be inserted for invalids, must be used together with 'invalidperiod'; any numeric value can be used"
                        },
                        "showemptytimeseries": {
                            "Name": "showemptytimeseries",
                            "Description": "sets if timeseries without a value should be removed or shown in the layer; default is true"
                        },
                        "hidetsid": {
                            "Name": "hidetsid",
                            "Description": "sets if timeseries ids should be hidden or shown in the layer; default is false; DEPRECATED - use returnfields instead"
                        },
                        "useprecision": {
                            "Name": "useprecision",
                            "Description": "advises KiWIS to use the WISKI precision for value formatting, true or false; default is true"
                        },
                        "valuelocale": {
                            "Name": "valuelocale",
                            "Description": "sets the locale in which the values will be formatted; default is en; for de, csvDiv will automatically be ';', all json formats will use locale en; only applies if useprecision=true"
                        },
                        "valuesasstring": {
                            "Name": "valuesasstring",
                            "Description": "advises KiWIS to return timeseries values in JSON as string instead of number, true or false; default is false"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getGraphTemplateList": {
                "Request": "getGraphTemplateList",
                "Description": "Retrieves a list of stored graph templates with metadata.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "templategroup": {
                            "Name": "templategroup",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "optionally select a group (sub-directory) for stored templates"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        }
                    }
                }
            },
            "getGraph": {
                "Request": "getGraph",
                "Description": "Retrieves a graph image of timeseries data.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return the requested range;from + period: will return the given period starting at the from date;to + period: will return the given period backdating from the to date;period: will return the given period backdating from the current system time;period=complete: will return the complete coverage of all requested timeseries;from: will return all data starting at the given from date until the current system time;futureperiod: will return the given period starting from the current system time;period + futureperiod: will return the combined given periods from the past and the future;from + futureperiod: will return the combined given period starting at the given from date until the end of the future period starting at the current system time",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or ts_path can be used"
                        },
                        "ext_ts_id": {
                            "Name": "ext_ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "additional ts ids for usage with the placeholder mechanism in templates; either ext_ts_id or ext_ts_path can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or ts_path can be used"
                        },
                        "ext_ts_path": {
                            "Name": "ext_ts_path",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "additional ts paths for usage with the placeholder mechanism in templates; either ext_ts_id or ext_ts_path can be used"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar; as an alternative period can be set to 'complete' to return all data"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        },
                        "width": {
                            "Name": "width",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "in pixels, 100 - 2000"
                        },
                        "height": {
                            "Name": "height",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "in pixels, 50 - 1500"
                        },
                        "template": {
                            "Name": "template",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "use a stored template for graph design"
                        },
                        "templategroup": {
                            "Name": "templategroup",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "optionally select a group (sub-directory) for a stored template"
                        },
                        "showgroups": {
                            "Name": "showgroups",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "select specific object groups to be visible in the graph; only applies for template graphs and the template must have groups specified"
                        },
                        "hidelegend": {
                            "Name": "hidelegend",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "true|false - overwrites or sets the hide-legend flag for template graphs"
                        },
                        "overlayinterval": {
                            "Name": "overlayinterval",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "set the overlay interval to year, month, week, day or halfyear; only applies for template graphs where the template contains overlaid setting for one timeseries"
                        },
                        "overlayslices": {
                            "Name": "overlayslices",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "select the slices that will be shown, e.g. 0,1,2 will show the first three years if interval is year; only applies for template graphs where the template contains overlaid setting for one timeseries"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "jpg": {
                            "Name": "jpg",
                            "Description": "JPG format"
                        },
                        "png": {
                            "Name": "png",
                            "Description": "PNG format with lossless compression"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "renderer": {
                            "Name": "renderer",
                            "Description": "supported values: XYTsRenderer, XYAreaRenderer, XYBarRenderer, XYLineAndShapeRenderer, XYStepAreaRenderer, YIntervalRenderer; does not apply for template graphs"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be used in graph, any time zone string as understood by Java (e.g. GMT+5, UTC, CET); if a zone is already defined in a template, it will NOT be overriden"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "forcecontentdisposition": {
                            "Name": "forcecontentdisposition",
                            "Description": "setting this to true advises KiWIS to set a content disposition header for all formats, triggering the browser to offer a download"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getStationGraph": {
                "Request": "getStationGraph",
                "Description": "Retrieves a graph image of timeseries data based on stations with a template.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return the requested range;from + period: will return the given period starting at the from date;to + period: will return the given period backdating from the to date;period: will return the given period backdating from the current system time;period=complete: will return the complete coverage of all requested timeseries;from: will return all data starting at the given from date until the current system time;futureperiod: will return the given period starting from the current system time;period + futureperiod: will return the combined given periods from the past and the future;from + futureperiod: will return the combined given period starting at the given from date until the end of the future period starting at the current system time",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "station_id": {
                            "Name": "station_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": ""
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar; as an alternative period can be set to 'complete' to return all data"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        },
                        "width": {
                            "Name": "width",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "in pixels, 100 - 2000"
                        },
                        "height": {
                            "Name": "height",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "in pixels, 50 - 1500"
                        },
                        "template": {
                            "Name": "template",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "select a stored template for station graph design, mandatory"
                        },
                        "templategroup": {
                            "Name": "templategroup",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "optionally select a group (sub-directory) for a stored template"
                        },
                        "showgroups": {
                            "Name": "showgroups",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "select specific object groups to be visible in the graph; only applies for template graphs and the template must have groups specified"
                        },
                        "hidelegend": {
                            "Name": "hidelegend",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "true|false - overwrites or sets the hide-legend flag for template graphs"
                        },
                        "overlayinterval": {
                            "Name": "overlayinterval",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "set the overlay interval to year, month, week, day or halfyear; only applies for template graphs where the template contains overlaid setting for one timeseries"
                        },
                        "overlayslices": {
                            "Name": "overlayslices",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "select the slices that will be shown, e.g. 0,1,2 will show the first three years if interval is year; only applies for template graphs where the template contains overlaid setting for one timeseries"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "jpg": {
                            "Name": "jpg",
                            "Description": "JPG format"
                        },
                        "png": {
                            "Name": "png",
                            "Description": "PNG format with lossless compression"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be used in graph, any time zone string as understood by Java (e.g. GMT+5, UTC, CET); if a zone is already defined in a template, it will NOT be overriden"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "forcecontentdisposition": {
                            "Name": "forcecontentdisposition",
                            "Description": "setting this to true advises KiWIS to set a content disposition header for all formats, triggering the browser to offer a download"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getColorClassifications": {
                "Request": "getColorClassifications",
                "Description": "Retrieves a list of WISKI color classifications.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "name": {
                            "Name": "name",
                            "* as wildcard": "yes",
                            "Comma separated list": "no",
                            "Description": "The classification name"
                        },
                        "parameterType": {
                            "Name": "parameterType",
                            "* as wildcard": "yes",
                            "Comma separated list": "no",
                            "Description": "The parameter type the classification is defined for"
                        },
                        "classificationType": {
                            "Name": "classificationType",
                            "* as wildcard": "yes",
                            "Comma separated list": "no",
                            "Description": "The classification type"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {}
                }
            },
            "getQualityCodes": {
                "Request": "getQualityCodes",
                "Description": "Retrieves the list of WISKI quality codes.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {}
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {}
                }
            },
            "getReleaseStateClasses": {
                "Request": "getReleaseStateClasses",
                "Description": "Retrieves the list of WISKI release state classes.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {}
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {}
                }
            },
            "getTimeseriesReleaseStateList": {
                "Request": "getTimeseriesReleaseStateList",
                "Description": "Retrieves a list of timeseries release states.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return the requested range;from + period: will return the given period starting at the from date;to + period: will return the given period backdating from the to date;period: will return the given period backdating from the current system time;from: will return all data starting at the given from date until the current system time;to: will return all data of the timeseries until the given to date;futureperiod: will return the given period starting from the current system time;period + futureperiod: will return the combined given periods from the past and the future;from + futureperiod: will return the combined given period starting at the given from date until the end of the future period starting at the current system time",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or ts_path can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "the timeseries path according to WISKI7; either ts_id or ts_path can be used"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET)"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getTimeseriesEnsembleValues": {
                "Request": "getTimeseriesEnsembleValues",
                "Description": "Retrieves a list of timeseries ensembles with values for one or more timeseries.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return the requested range;from + period: will return the given period starting at the from date;to + period: will return the given period backdating from the to date;period: will return the given period backdating from the current system time;from: will return all data starting at the given from date until the current system time;to: will return all data of the timeseries until the given to date;futureperiod: will return the given period starting from the current system time;period + futureperiod: will return the combined given periods from the past and the future;from + futureperiod: will return the combined given period starting at the given from date until the end of the future period starting at the current system time",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id, ts_path or timeseriesgroup_id can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "(yes)",
                            "Comma separated list": "(yes)",
                            "Description": "the timeseries path according to WISKI7; a single path with placeholders may be used or a comma separated list without placeholders; either ts_id, ts_path or timeseriesgroup_id can be used"
                        },
                        "timeseriesgroup_id": {
                            "Name": "timeseriesgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or timeseriesgroup_id or ts_path can be used"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        },
                        "ensembledispatchinfo": {
                            "Name": "ensembledispatchinfo",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "the dispatch info for which ensembles should be returned"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET)"
                        },
                        "useprecision": {
                            "Name": "useprecision",
                            "Description": "advises KiWIS to use the WISKI precision for value formatting, true or false; default is true"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getTimeseriesChanges": {
                "Request": "getTimeseriesChanges",
                "Description": "Retrieves a list of changes for a timeseries.",
                "Subdescription": "By default, this is feature is only available for import timeseries in WISKI. For any other timeseries, the tsEditHistory has to be activated.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "either ts_id or ts_path can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "the timeseries path according to WISKI7; a single path without placeholders may be used; either ts_id or ts_path can be used"
                        },
                        "changedsince": {
                            "Name": "changedsince",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET)"
                        },
                        "optimizechanges": {
                            "Name": "optimizechanges",
                            "Description": "Changes will be optimized, meaning that interconnected changes for equidistant timeseries will be merged by KiWIS at the cost of losing the change_time"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "getTimeseriesComments": {
                "Request": "getTimeseriesComments",
                "Description": "Retrieves object comments/remarks on timeseries level.",
                "Subdescription": "The following combinations of time periods can be requested:;from + to: will return the requested range;from + period: will return the given period starting at the from date;to + period: will return the given period backdating from the to date;period: will return the given period backdating from the current system time;period=complete: will return the complete coverage of all requested timeseries;from: will return all data starting at the given from date until the current system time;to: will return all data of the timeseries until the given to date;futureperiod: will return the given period starting from the current system time;period + futureperiod: will return the combined given periods from the past and the future;from + futureperiod: will return the combined given period starting at the given from date until the end of the future period starting at the current system time",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or ts_path can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "(yes)",
                            "Comma separated list": "(yes)",
                            "Description": "the timeseries path according to WISKI7; a single path with placeholders may be used or a comma separated list without placeholders; either ts_id or ts_path can be used"
                        },
                        "comment_type": {
                            "Name": "comment_type",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "Retrieve comments for object types station, parameter, timeseries, data, agent or use the keyword all to get all types"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar; as an alternative period can be set to 'complete' to return all data"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "ascii": {
                            "Name": "ascii",
                            "Description": "Plain ASCII format"
                        },
                        "html": {
                            "Name": "html",
                            "Description": "HTML format"
                        },
                        "csv": {
                            "Name": "csv",
                            "Description": "CSV table format"
                        },
                        "tabjson": {
                            "Name": "tabjson",
                            "Description": "JSON format to reflect table structure"
                        },
                        "objson": {
                            "Name": "objson",
                            "Description": "JSON format to reflect object structure"
                        },
                        "xlsx": {
                            "Name": "xlsx",
                            "Description": "Excel 2007+ format with number and date cell types; due to cell formating, production time quickly increases with the number of rows and columns"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "Description": ""
                        },
                        "from": {
                            "Name": "from",
                            "Description": "Valid from timestamp of the comment/remark"
                        },
                        "to": {
                            "Name": "to",
                            "Description": "Valid to timestamp of the comment/remark"
                        },
                        "comment_type": {
                            "Name": "comment_type",
                            "Description": "The object the comment/remark is attached to"
                        },
                        "std_remark_shortname": {
                            "Name": "std_remark_shortname",
                            "Description": "Shortname of the linked standard remark type for standard remarks"
                        },
                        "std_remark_text": {
                            "Name": "std_remark_text",
                            "Description": "Text of the linked standard remark type for standard remarks"
                        },
                        "comment": {
                            "Name": "comment",
                            "Description": "The comment/remark text"
                        }
                    }
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {
                        "csvdiv": {
                            "Name": "csvdiv",
                            "Description": "overwrite the standard CSV delimiter (;) with another symbol in CSV requests"
                        },
                        "dateformat": {
                            "Name": "dateformat",
                            "Description": "the date format that will be returned, see date formats"
                        },
                        "timezone": {
                            "Name": "timezone",
                            "Description": "the time zone that will be returned for all timestamps, any time zone string as understood by Java (e.g. GMT+5, UTC, CET) or 'individual' to use individual timeseries timezones"
                        },
                        "downloadaszip": {
                            "Name": "downloadaszip",
                            "Description": "provides the result as a ZIP file containing a file in the selected format"
                        },
                        "downloadfilename": {
                            "Name": "downloadfilename",
                            "Description": "sets the file name if downloadaszip=true is set or CSV and Excel downloads are requested, default name is generic per request"
                        },
                        "commentlanguage": {
                            "Name": "commentlanguage",
                            "Description": "The language of comments based on standard remark types that will be returned, default is 'en'"
                        }
                    }
                },
                "Dateformats": {
                    "Description": "Supported Dateformats",
                    "Content": {
                        "yyyy-MM-dd'T'HH:mm:ss.SSSXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
                        },
                        "yyyy-MM-dd'T'HH:mm:ssXXX": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ssXXX"
                        },
                        "yyyy-MM-dd HH:mm:ss.SSS": {
                            "Name": "yyyy-MM-dd HH:mm:ss.SSS"
                        },
                        "yyyy-MM-dd'T'HH:mm:ss": {
                            "Name": "yyyy-MM-dd'T'HH:mm:ss"
                        },
                        "yyyy-MM-dd HH:mm:ss": {
                            "Name": "yyyy-MM-dd HH:mm:ss"
                        },
                        "yyyy-MM-dd": {
                            "Name": "yyyy-MM-dd"
                        },
                        "yyyy-MM": {
                            "Name": "yyyy-MM"
                        },
                        "yyyy": {
                            "Name": "yyyy"
                        },
                        "yyyy-MM-ddXXX": {
                            "Name": "yyyy-MM-ddXXX"
                        },
                        "yyyyXXX": {
                            "Name": "yyyyXXX"
                        },
                        "yyyy-MMXXX": {
                            "Name": "yyyy-MMXXX"
                        },
                        "UNIX (in milliseconds)": {
                            "Name": "UNIX (in milliseconds)"
                        }
                    }
                }
            },
            "checkValueLimit": {
                "Request": "checkValueLimit",
                "Description": "Checks value limitations for time range value requests.",
                "QueryFields": {
                    "Description": "Possible queryfields as parameter",
                    "Content": {
                        "ts_id": {
                            "Name": "ts_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or timeseriesgroup_id or ts_path can be used"
                        },
                        "ts_path": {
                            "Name": "ts_path",
                            "* as wildcard": "(yes)",
                            "Comma separated list": "(yes)",
                            "Description": "the timeseries path according to WISKI7; a single path with placeholders may be used or a comma separated list without placeholders; either ts_id or timeseriesgroup_id or ts_path can be used"
                        },
                        "timeseriesgroup_id": {
                            "Name": "timeseriesgroup_id",
                            "* as wildcard": "no",
                            "Comma separated list": "yes",
                            "Description": "either ts_id or timeseriesgroup_id or ts_path can be used"
                        },
                        "from": {
                            "Name": "from",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, not providing 'from' delivers the last ts value only"
                        },
                        "to": {
                            "Name": "to",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "see date formats, using yyyy-MM-dd as format includes the complete given day"
                        },
                        "period": {
                            "Name": "period",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar; as an alternative period can be set to 'complete' to return all data"
                        },
                        "futureperiod": {
                            "Name": "futureperiod",
                            "* as wildcard": "no",
                            "Comma separated list": "no",
                            "Description": "retrieve data for a time period according to ISO format P#Y#M#DT#H#M#S where P just indicates an arbitrary period with the # being integers; the entities are: Y=Year, M=Month, D=Day, T just indicates that smaller entities are included, H=Hour, M=Minute, S=Second; W=Week is also supported but mutually exclusive with D=Day setting; Examples: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S; all periods are applied by calendar"
                        }
                    }
                },
                "Formats": {
                    "Description": "Possible formats as parameter 'format'",
                    "Content": {
                        "json": {
                            "Name": "json",
                            "Description": "JSON format"
                        }
                    }
                },
                "Returnfields": {
                    "Description": "Returnable fields as optional parameter 'returnfields' (allows comma separated list)",
                    "Content": {}
                },
                "Optionalfields": {
                    "Description": "More optional fields",
                    "Content": {}
                }
            }
        }
    }
]
